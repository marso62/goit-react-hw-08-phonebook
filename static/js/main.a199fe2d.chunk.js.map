{"version":3,"sources":["routes.js","redux/auth/authSelectors.js","components/PublicRoute.js","components/PrivateRoute.js","components/AuthMenu.js","components/UserMenu/UserMenu.js","components/App.js","redux/contacts/contactReducer.js","redux/auth/authReducer.js","redux/store.js","index.js","redux/auth/authActions.js","services/fetchAuth.js","redux/contacts/contactAction.js"],"names":["path","label","exact","component","lazy","private","restricted","state","auth","token","user","name","loadingUser","connect","isAuthenticated","authSelectors","Component","routeProps","render","props","to","routePath","routes","map","route","routeLabel","className","activeClassName","onLogout","authOperations","logout","type","onClick","App","this","onGetCurrentUser","isLogin","isUserLoading","fallback","color","height","width","timeout","key","getCurrentUser","items","createReducer","contactAction","fetchContactsSuccess","_","payload","addContactsSuccess","removeContactsSuccess","filter","id","changeFilter","loading","fetchContactsRequest","fetchContactsError","addContactsRequest","addContactsError","removeContactsRequest","removeContactsError","combineReducers","INITIAL_USER","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","error","registerError","loginError","logoutError","getCurrentUserError","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","authPersisstCOnfig","storage","whitelist","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","document","getElementById","createAction","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","then","response","console","log","data","catch","message","login","getState","persistedToken","get"],"mappings":"8SAEe,G,MAAA,CACb,CACEA,KAAM,SACNC,MAAO,QACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,uDACtBC,SAAS,EACTC,YAAY,K,QCrBD,EAJC,SAACC,GAAD,OAAWA,EAAMC,KAAKC,OAIvB,EAFK,SAACF,GAAD,OAAWA,EAAMC,KAAKE,KAAKC,MAEhC,EAHI,SAACJ,GAAD,OAAWA,EAAMC,KAAKI,aC0B1BC,eAJS,SAACN,GAAD,MAAY,CAClCO,gBAAiBC,EAAsBR,MAG1BM,EAtBK,SAAC,GAAD,IACPG,EADO,EAClBb,UACAW,EAFkB,EAElBA,gBACAR,EAHkB,EAGlBA,WACGW,EAJe,mEAMlB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACC,GAAD,OACNL,GAAmBR,EACjB,kBAAC,IAAD,CAAUc,GAAG,cAEb,kBAACJ,EAAcG,UCKRN,eAJS,SAACN,GAAD,MAAY,CAClCO,gBAAiBC,EAAsBR,MAG1BM,EAjBM,SAAC,GAAD,IACRG,EADQ,EACnBb,UACAW,EAFmB,EAEnBA,gBACGG,EAHgB,sDAKnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACC,GAAD,OACNL,EAAkB,kBAACE,EAAcG,GAAY,kBAAC,IAAD,CAAUC,GAAG,kBCL1DC,EAAYC,EAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMxB,QACxCyB,EAAaH,EAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMvB,SA+BhCY,eAJS,SAACN,GAAD,MAAY,CAClCO,gBAAiBC,EAAsBR,MAG1BM,EA7BE,kBACf,oCACE,wBAAIa,UAAU,sBACZ,4BACE,kBAAC,IAAD,CACEN,GAAIC,EAAU,GACdK,UAAU,kBACVC,gBAAgB,0BAEfF,EAAW,KAGhB,4BACE,kBAAC,IAAD,CACEL,GAAIC,EAAU,GACdK,UAAU,kBACVC,gBAAgB,0BAEfF,EAAW,U,QCTPZ,eAJQ,SAACN,GAAD,MAAY,CACjCI,KAAMI,EAA0BR,MAGK,CACrCqB,SAAUC,IAAeC,QADZjB,EAfE,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,KAAMiB,EAAe,EAAfA,SACxB,OACE,yBAAKF,UAAU,YACb,uCAAaf,EAAb,QACA,4BAAQoB,KAAK,SAASC,QAASJ,GAA/B,cCWAK,G,wLAEFC,KAAKf,MAAMgB,qB,+BAGH,IAAD,EAC4BD,KAAKf,MAAhCiB,EADD,EACCA,QAASC,EADV,EACUA,cAEjB,OACE,oCACE,kBAAC,IAAD,KACE,yBAAKX,UAAU,cACZU,GACC,kBAAC,IAAD,CAAShB,GAAG,YAAYM,UAAU,kBAAlC,YAIF,8BACA,6BAAMU,IAAYC,EAAgB,kBAAC,EAAD,MAAe,kBAAC,EAAD,QAEnD,kBAAC,WAAD,CACEC,SACE,kBAAC,IAAD,CACEP,KAAK,YACLQ,MAAM,UACNC,OAAQ,GACRC,MAAO,IACPC,QAAS,OAIb,kBAAC,IAAD,KACGpB,EAAOC,KAAI,SAACC,GACX,OAAOA,EAAMnB,QACX,kBAAC,EAAD,eAAcsC,IAAKnB,EAAMxB,MAAUwB,IAEnC,kBAAC,EAAD,eACEmB,IAAKnB,EAAMxB,MACPwB,EAFN,CAGElB,WAAYkB,EAAMlB,yB,GAvCpBU,cAwDHH,eALS,SAACN,GAAD,MAAY,CAClC6B,QAASrB,EAAsBR,GAC/B8B,cAAetB,EAAyBR,MAGF,CACtC4B,iBAAkBN,IAAee,gBADpB/B,CAEZoB,G,6DCrEGY,EAAQC,YAAc,IAAD,mBACxBC,IAAcC,sBAAuB,SAACC,EAAD,YAAMC,WADnB,cAExBH,IAAcI,oBANI,SAAC5C,EAAD,YAAU2C,SAAV,mBAAqC3C,OAI/B,cAGxBwC,IAAcK,uBANO,SAAC7C,EAAD,OAAU2C,EAAV,EAAUA,QAAV,OACtB3C,EAAM8C,QAAO,qBAAGC,KAAgBJ,QAEP,IAMrBG,EAASP,YAAc,GAAD,eACzBC,IAAcQ,cAAe,SAACN,EAAD,YAAMC,YAGhCM,EAAUV,aAAc,GAAD,mBAC1BC,IAAcU,sBAAuB,kBAAM,KADjB,cAE1BV,IAAcC,sBAAuB,kBAAM,KAFjB,cAG1BD,IAAcW,oBAAqB,kBAAM,KAHf,cAI1BX,IAAcY,oBAAqB,kBAAM,KAJf,cAK1BZ,IAAcI,oBAAqB,kBAAM,KALf,cAM1BJ,IAAca,kBAAmB,kBAAM,KANb,cAO1Bb,IAAcc,uBAAwB,kBAAM,KAPlB,cAQ1Bd,IAAcK,uBAAwB,kBAAM,KARlB,cAS1BL,IAAce,qBAAsB,kBAAM,KAThB,IAYdC,cAAgB,CAC7BlB,QACAQ,SACAG,Y,OC7BIQ,EAAe,CAAErD,KAAM,KAAMsD,MAAO,MAEpCvD,EAAOoC,YAAckB,GAAD,iBAAC,EACxBE,IAAYC,iBAAkB,SAAClB,EAAD,YAAMC,QAAsBxC,QADnC,YAAC,EAExBwD,IAAYE,cAAe,SAACnB,EAAD,YAAMC,QAAsBxC,QAFhC,YAAC,EAGxBwD,IAAYG,eAAgB,kBAAML,KAHX,YAAC,EAIxBE,IAAYI,uBAAwB,SAACrB,EAAD,YAAMC,WAJnB,IAMpBzC,EAAQqC,YAAc,MAAD,mBACxBoB,IAAYC,iBAAkB,SAAClB,EAAD,YAAMC,QAAsBzC,SADlC,cAExByD,IAAYE,cAAe,SAACnB,EAAD,YAAMC,QAAsBzC,SAF/B,cAGxByD,IAAYG,eAAgB,kBAAM,QAHV,IAKrBE,EAAQzB,YAAc,MAAD,iBAAC,EACzBoB,IAAYM,eAAgB,SAACvB,EAAD,YAAMC,WADV,YAAC,EAEzBgB,IAAYO,YAAa,SAACxB,EAAD,YAAMC,WAFP,YAAC,EAGzBgB,IAAYQ,aAAc,SAACzB,EAAD,YAAMC,WAHR,YAAC,EAIzBgB,IAAYS,qBAAsB,SAAC1B,EAAD,YAAMC,WAJhB,IAOrBtC,GAAckC,aAAc,GAAD,mBAC9BoB,IAAYU,iBAAkB,kBAAM,KADN,cAE9BV,IAAYC,iBAAkB,kBAAM,KAFN,cAG9BD,IAAYM,eAAgB,kBAAM,KAHJ,cAI9BN,IAAYW,cAAe,kBAAM,KAJH,cAK9BX,IAAYE,cAAe,kBAAM,KALH,cAM9BF,IAAYO,YAAa,kBAAM,KAND,cAO9BP,IAAYY,eAAgB,kBAAM,KAPJ,cAQ9BZ,IAAYG,eAAgB,kBAAM,KARJ,cAS9BH,IAAYQ,aAAc,kBAAM,KATF,cAU9BR,IAAYa,uBAAwB,kBAAM,KAVZ,cAW9Bb,IAAYI,uBAAwB,kBAAM,KAXZ,cAY9BJ,IAAYS,qBAAsB,kBAAM,KAZV,IAelBZ,eAAgB,CAAErD,OAAMD,QAAO8D,QAAO3D,iBCzB/CoE,GAAqB,CACzBrC,IAAK,OACLsC,YACAC,UAAW,CAAC,UAGDC,GAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,EACV/E,KAAMgF,YAAeR,GAAoBS,KAE3CC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAKnDC,GAAYC,YAAalB,I,OCpBtCmB,IAASpF,OACP,kBAAC,IAAD,CAAUiE,MAAOA,IACf,kBAAC,IAAD,CAAa3B,QAAS,KAAM4C,UAAWA,IACrC,kBAAC,EAAD,QAIJG,SAASC,eAAe,U,+BCpB1B,WAEM5B,EAAkB6B,YAAa,wBAC/BtC,EAAkBsC,YAAa,wBAC/BjC,EAAgBiC,YAAa,sBAE7B5B,EAAe4B,YAAa,qBAC5BrC,EAAeqC,YAAa,qBAC5BhC,EAAagC,YAAa,mBAE1B3B,EAAgB2B,YAAa,sBAC7BpC,EAAgBoC,YAAa,sBAC7B/B,EAAc+B,YAAa,oBAE3B1B,EAAwB0B,YAAa,8BACrCnC,EAAwBmC,YAAa,8BACrC9B,EAAsB8B,YAAa,4BAE1B,KACb7B,kBACAT,kBACAK,gBACAK,eACAT,eACAK,aACAK,gBACAT,gBACAK,cACAK,wBACAT,wBACAK,wB,qFC3BF+B,IAAMC,SAASC,QAAU,2CAEzB,IAAMnG,EAAQ,SACRA,GACFiG,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDtG,IAFtDA,EAAQ,WAKViG,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IA0DnC,KACbC,SAvDe,SAACC,GAAD,8CAAiB,WAAOC,GAAP,SAAAC,EAAA,6DAChCD,EAAShD,IAAYU,mBADW,SAG1B8B,IACHU,KAAK,gBAAiBH,GACtBI,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ7G,EAAU6G,EAASG,KAAKhH,OACxByG,EAAShD,IAAYC,gBAAgBmD,EAASG,UAE/CC,OAAM,SAACnD,GAAD,OAAW2C,EAAShD,IAAYM,cAAcD,EAAMoD,aAV7B,2CAAjB,uDAwDfC,MA3CY,SAACX,GAAD,8CAAiB,WAAOC,GAAP,SAAAC,EAAA,6DAC7BD,EAAShD,IAAYW,gBADQ,SAEvB6B,IACHU,KAAK,eAAgBH,GACrBI,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPhH,EAAUgH,EAAKhH,OACfyG,EAAShD,IAAYE,aAAaqD,OAEnCC,OAAM,SAACnD,GAAD,OAAW2C,EAAShD,IAAYO,WAAWF,EAAMoD,aAR7B,2CAAjB,uDA4CZ7F,OAjCa,yDAAM,WAAOoF,GAAP,SAAAC,EAAA,6DACnBD,EAAShD,IAAYY,iBADF,SAEb4B,IACHU,KAAK,iBACLC,MAAK,WACJ5G,IACAyG,EAAShD,IAAYG,oBAEtBqD,OAAM,SAACnD,GAAD,OAAW2C,EAAShD,IAAYQ,YAAYH,EAAMoD,aARxC,2CAAN,uDAkCb/E,eAvBqB,yDAAM,WAAOsE,EAAUW,GAAjB,iBAAAV,EAAA,2DAGvBU,IADaC,EAFU,EAEzBtH,KAAQC,MAFiB,wDAS3BA,EAAUqH,GACVZ,EAAShD,IAAYa,yBAVM,SAWrB2B,IACHqB,IAAI,kBACJV,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPP,EAAShD,IAAYI,sBAAsBmD,OAE5CC,OAAM,SAACnD,GAAD,OAAW2C,EAAShD,IAAYS,oBAAoBJ,EAAMoD,aAhBxC,2CAAN,2D,oECjDvB,WAEMlE,EAAuBgD,YAAa,yBACpCzD,EAAuByD,YAAa,yBACpC/C,EAAqB+C,YAAa,uBAElC9C,EAAqB8C,YAAa,uBAClCtD,EAAqBsD,YAAa,uBAClC7C,EAAmB6C,YAAa,qBAEhC5C,EAAwB4C,YAAa,0BACrCrD,EAAwBqD,YAAa,0BACrC3C,EAAsB2C,YAAa,wBAEnClD,EAAekD,YAAa,wBAEnB,KACbhD,uBACAT,uBACAU,qBACAC,qBACAR,qBACAS,mBACAC,wBACAT,wBACAU,sBAEAP,iB","file":"static/js/main.a199fe2d.chunk.js","sourcesContent":["import { lazy } from \"react\";\n\nexport default [\n  {\n    path: \"/login\",\n    label: \"Login\",\n    exact: true,\n    component: lazy(() => import(\"./views/LoginView\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/register\",\n    label: \"Register\",\n    exact: true,\n    component: lazy(() => import(\"./views/RegisterView\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/contacts\",\n    label: \"Contacts\",\n    exact: true,\n    component: lazy(() => import(\"./views/ContactsViews\")),\n    private: true,\n    restricted: false,\n  },\n];\n","const isLogin = (state) => state.auth.token;\nconst isUserLoad = (state) => state.auth.loadingUser;\nconst getUserName = (state) => state.auth.user.name;\n\nexport default { isLogin, getUserName, isUserLoad };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"../redux/auth/authSelectors\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  restricted,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isLogin(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"../redux/auth/authSelectors\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isLogin(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport routes from \"../routes\";\n\nimport authSelectors from \"../redux/auth/authSelectors\";\n\nconst routePath = routes.map((route) => route.path);\nconst routeLabel = routes.map((route) => route.label);\n\nconst AuthMenu = () => (\n  <>\n    <ul className=\"Navigation_log-reg\">\n      <li>\n        <NavLink\n          to={routePath[0]}\n          className=\"Navigation-link\"\n          activeClassName=\"Navigation-link-active\"\n        >\n          {routeLabel[0]}\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to={routePath[1]}\n          className=\"Navigation-link\"\n          activeClassName=\"Navigation-link-active\"\n        >\n          {routeLabel[1]}\n        </NavLink>\n      </li>\n    </ul>\n  </>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isLogin(state),\n});\n\nexport default connect(mapStateToProps)(AuthMenu);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../../services/fetchAuth\";\nimport authSelectors from \"../../redux/auth/authSelectors\";\n\nconst UserMenu = ({ name, onLogout }) => {\n  return (\n    <div className=\"userMenu\">\n      <p>Welcome, {name} !!!</p>\n      <button type=\"submit\" onClick={onLogout}>\n        Logout\n      </button>\n    </div>\n  );\n};\n\nconst mapStateTorops = (state) => ({\n  name: authSelectors.getUserName(state),\n});\n\nexport default connect(mapStateTorops, {\n  onLogout: authOperations.logout,\n})(UserMenu);\n","import React, { Component, Suspense } from \"react\";\nimport { Switch, BrowserRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Loader from \"react-loader-spinner\";\nimport \"../../node_modules/react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport routes from \"../routes\";\nimport PublicRoute from \"./PublicRoute\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport AuthMenu from \"./AuthMenu\";\nimport UserMenu from \"../components/UserMenu/UserMenu\";\n\nimport authSelectors from \"../redux/auth/authSelectors\";\nimport authOperations from \"../services/fetchAuth\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    const { isLogin, isUserLoading } = this.props;\n\n    return (\n      <>\n        <BrowserRouter>\n          <div className=\"Navigation\">\n            {isLogin && (\n              <NavLink to=\"/contacts\" className=\"Contacts_title\">\n                Contacts\n              </NavLink>\n            )}\n            <div></div>\n            <div>{isLogin && !isUserLoading ? <UserMenu /> : <AuthMenu />}</div>\n          </div>\n          <Suspense\n            fallback={\n              <Loader\n                type=\"ThreeDots\"\n                color=\"#f5f505\"\n                height={50}\n                width={100}\n                timeout={3000} //3 secs\n              />\n            }\n          >\n            <Switch>\n              {routes.map((route) => {\n                return route.private ? (\n                  <PrivateRoute key={route.path} {...route} />\n                ) : (\n                  <PublicRoute\n                    key={route.path}\n                    {...route}\n                    restricted={route.restricted}\n                  />\n                );\n              })}\n            </Switch>\n          </Suspense>\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLogin: authSelectors.isLogin(state),\n  isUserLoading: authSelectors.isUserLoad(state),\n});\n\nexport default connect(mapStateToProps, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n\n// {\"name\":\"qwer\",\"email\":\"qwer@qwer.com\",\"password\":\"qwertyuio\"}\"\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport contactAction from \"./contactAction\";\n\nconst onAddContact = (state, { payload }) => [payload, ...state];\nconst onRemoveContact = (state, { payload }) =>\n  state.filter(({ id }) => id !== payload);\n\nconst items = createReducer([], {\n  [contactAction.fetchContactsSuccess]: (_, { payload }) => payload,\n  [contactAction.addContactsSuccess]: onAddContact,\n  [contactAction.removeContactsSuccess]: onRemoveContact,\n});\n\nconst filter = createReducer(\"\", {\n  [contactAction.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [contactAction.fetchContactsRequest]: () => true,\n  [contactAction.fetchContactsSuccess]: () => false,\n  [contactAction.fetchContactsError]: () => false,\n  [contactAction.addContactsRequest]: () => true,\n  [contactAction.addContactsSuccess]: () => false,\n  [contactAction.addContactsError]: () => false,\n  [contactAction.removeContactsRequest]: () => true,\n  [contactAction.removeContactsSuccess]: () => false,\n  [contactAction.removeContactsError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport authActions from \"./authActions\";\n\nconst INITIAL_USER = { name: null, email: null };\n\nconst user = createReducer(INITIAL_USER, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => INITIAL_USER,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst loadingUser = createReducer(false, {\n  [authActions.registerRequest]: () => true,\n  [authActions.registerSuccess]: () => false,\n  [authActions.registerError]: () => false,\n  [authActions.loginRequest]: () => true,\n  [authActions.loginSuccess]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.logoutRequest]: () => true,\n  [authActions.logoutSuccess]: () => false,\n  [authActions.logoutError]: () => false,\n  [authActions.getCurrentUserRequest]: () => true,\n  [authActions.getCurrentUserSuccess]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({ user, token, error, loadingUser });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  persistReducer,\n  persistStore,\n  PURGE,\n  REGISTER,\n  REHYDRATE,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactReducer from \"../redux/contacts/contactReducer\";\nimport authReducer from \"../redux/auth/authReducer\";\n\nconst authPersisstCOnfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    auth: persistReducer(authPersisstCOnfig, authReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./components/App.js\";\n\nimport { store, persistor } from \"./redux/store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import axios from \"axios\";\nimport authActions from \"../redux/auth/authActions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  await axios\n    .post(\"/users/signup\", credentials)\n    .then((response) => {\n      console.log(response);\n      token.set(response.data.token);\n      dispatch(authActions.registerSuccess(response.data));\n    })\n    .catch((error) => dispatch(authActions.registerError(error.message)));\n};\n\nconst login = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n  await axios\n    .post(\"/users/login\", credentials)\n    .then(({ data }) => {\n      token.set(data.token);\n      dispatch(authActions.loginSuccess(data));\n    })\n    .catch((error) => dispatch(authActions.loginError(error.message)));\n};\n\nconst logout = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n  await axios\n    .post(\"/users/logout\")\n    .then(() => {\n      token.unset();\n      dispatch(authActions.logoutSuccess());\n    })\n    .catch((error) => dispatch(authActions.logoutError(error.message)));\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  await axios\n    .get(\"/users/current\")\n    .then(({ data }) => {\n      dispatch(authActions.getCurrentUserSuccess(data));\n    })\n    .catch((error) => dispatch(authActions.getCurrentUserError(error.message)));\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\");\n\nconst addContactsRequest = createAction(\"contacts/addRequest\");\nconst addContactsSuccess = createAction(\"contacts/addSuccess\");\nconst addContactsError = createAction(\"contacts/addError\");\n\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactsError = createAction(\"contacts/removeError\");\n\nconst changeFilter = createAction(\"contact/changeFilter\");\n\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n\n  changeFilter,\n};\n"],"sourceRoot":""}